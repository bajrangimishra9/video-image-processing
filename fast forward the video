import cv2

def trim_and_speedup_video(input_path, output_path, start_time, end_time, speedup_factor):
    """
    Trim and speed up a video to the specified duration and speedup factor.

    Parameters:
    input_path: str
        Path to the input video file.
    output_path: str
        Path to save the trimmed and sped-up video file.
    start_time: float
        Start time in seconds for trimming.
    end_time: float
        End time in seconds for trimming.
    speedup_factor: float
        Factor by which to speed up the video (e.g., 2.0 for double speed).
    """
    # Open the input video
    cap = cv2.VideoCapture(input_path)

    # Get the frame rate of the input video
    fps = int(cap.get(cv2.CAP_PROP_FPS))

    # Calculate the starting and ending frame indices
    start_frame = int(start_time * fps)
    end_frame = int(end_time * fps)

    # Get the width and height of the frames
    frame_width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    frame_height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))

    # Create a VideoWriter object to write the output video
    fourcc = cv2.VideoWriter_fourcc(*'mp4v')
    out = cv2.VideoWriter(output_path, fourcc, int(fps * speedup_factor), (frame_width, frame_height))

    # Set the current frame position to the start frame
    cap.set(cv2.CAP_PROP_POS_FRAMES, start_frame)

    current_frame = start_frame
    while cap.isOpened() and current_frame < end_frame:
        ret, frame = cap.read()
        if not ret:
            break
        if (current_frame - start_frame) % speedup_factor == 0:
            out.write(frame)
        current_frame += 1

    # Release the VideoCapture and VideoWriter objects
    cap.release()
    out.release()
    print(f"Video trimmed and saved to {output_path}")

# Example usage
input_video_path = '00003.mp4'  # Replace with your input video path
output_video_path = 'testvideo.mp4'  # Replace with your desired output video path
start_time = 480  # Start time in seconds
end_time = 810  # End time in seconds
speedup_factor = 4.0  # Speed up the video by 2x

trim_and_speedup_video(input_video_path, output_video_path, start_time, end_time, speedup_factor)
