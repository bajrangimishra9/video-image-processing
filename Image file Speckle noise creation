import os
import cv2
import numpy as np
import matplotlib.pyplot as plt

def add_speckle_noise(image, mean=0, var=3):
    """
    Add speckle noise to an image.

    Parameters:
    image: numpy array
        Input image.
    mean: float
        Mean of the Gaussian noise.
    var: float
        Variance of the Gaussian noise.

    Returns:
    noisy_image: numpy array
        Image with added speckle noise.
    """
    row, col, ch = image.shape
    sigma = var**0.5
    gauss = np.random.normal(mean, sigma, (row, col, ch))
    gauss = gauss.reshape(row, col, ch)
    noisy_image = image + image * gauss
    noisy_image = np.clip(noisy_image, 0, 255).astype(np.uint8)
    return noisy_image

def process_images(input_dir, output_dir):
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    for filename in os.listdir(input_dir):
        if filename.lower().endswith(('.png', '.jpg', '.jpeg', '.bmp', '.tiff')):
            # Load the image
            image_path = os.path.join(input_dir, filename)
            image = cv2.imread(image_path)
            image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

            # Add speckle noise to the image
            noisy_image = add_speckle_noise(image)

            # Save the noisy image
            noisy_image_path = os.path.join(output_dir, filename)
            cv2.imwrite(noisy_image_path, cv2.cvtColor(noisy_image, cv2.COLOR_RGB2BGR))

            # Plot the original and noisy images
            plt.figure(figsize=(10, 5))
            plt.subplot(1, 2, 1)
            plt.title("Original Image")
            plt.imshow(image)
            plt.axis('off')

            plt.subplot(1, 2, 2)
            plt.title("Image with Speckle Noise")
            plt.imshow(noisy_image)
            plt.axis('off')

            plt.show()

# Define the input and output directories
input_dir = '/home/test'  # Replace with your input directory path
output_dir = '/home/result'  # Replace with your output directory path

# Process the images
process_images(input_dir, output_dir)
